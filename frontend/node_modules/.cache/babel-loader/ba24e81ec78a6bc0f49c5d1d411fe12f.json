{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\Web Dev\\\\WikidChart\\\\frontend\\\\src\\\\components\\\\AxesSelector.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\nimport Button from './Button';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AxesSelector = (tableHeaders, _ref) => {\n  _s();\n\n  let {\n    onAxesSelected\n  } = _ref;\n  const [headers, setHeaders] = useState([]);\n\n  const setXaxis = e => {// TODO: set  Local state of x\n    // TODO: Confirm that the axes are not the same and there are 2 selected\n    // Return axes indexes in setHeaders\n  };\n\n  const setYaxis = e => {// TODO: set  Local state of x\n    // TODO: Confirm that the axes are not the same and there are 2 selected\n    // Return axes indexes in setHeaders\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Axes selection goes here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n      id: \"x-axis-dropdown\",\n      title: \"x - axis\",\n      onSelect: e => setXaxis(e.target.value),\n      items: tableHeaders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n      id: \"y-axis-dropdown\",\n      title: \"y - axis\",\n      onSelect: e => setYaxis(e.target.value),\n      items: tableHeaders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AxesSelector, \"BBzj3n+xMS/Putj8v3mGM4cL2U8=\");\n\n_c = AxesSelector;\nexport default AxesSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"AxesSelector\");","map":{"version":3,"sources":["D:/Dev/Web Dev/WikidChart/frontend/src/components/AxesSelector.js"],"names":["React","DropdownButton","Dropdown","Button","useState","useEffect","AxesSelector","tableHeaders","onAxesSelected","headers","setHeaders","setXaxis","e","setYaxis","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,iBAAzC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,YAAY,GAAG,CAACC,YAAD,WAAsC;AAAA;;AAAA,MAAvB;AAAEC,IAAAA;AAAF,GAAuB;AACvD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAGE,QAAMO,QAAQ,GAAIC,CAAD,IAAO,CAEtB;AAEA;AAEA;AAEH,GARC;;AAUF,QAAMC,QAAQ,GAAID,CAAD,IAAO,CAEpB;AAEA;AAEA;AAEH,GARD;;AAWA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEK,QAAC,cAAD;AAAgB,MAAA,EAAE,EAAC,iBAAnB;AAAqC,MAAA,KAAK,EAAC,UAA3C;AAAsD,MAAA,QAAQ,EAAGA,CAAD,IAAOD,QAAQ,CAACC,CAAC,CAACE,MAAF,CAASC,KAAV,CAA/E;AAAiG,MAAA,KAAK,EAAER;AAAxG;AAAA;AAAA;AAAA;AAAA,YAFL,eAGK,QAAC,cAAD;AAAgB,MAAA,EAAE,EAAC,iBAAnB;AAAqC,MAAA,KAAK,EAAC,UAA3C;AAAsD,MAAA,QAAQ,EAAGK,CAAD,IAAOC,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAA/E;AAAiG,MAAA,KAAK,EAAER;AAAxG;AAAA;AAAA;AAAA;AAAA,YAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAhCD;;GAAMD,Y;;KAAAA,Y;AAkCN,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport Button from './Button';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst AxesSelector = (tableHeaders, { onAxesSelected }) => {\r\n    const [headers, setHeaders] = useState([])\r\n\r\n \r\n      const setXaxis = (e) => { \r\n       \r\n        // TODO: set  Local state of x\r\n         \r\n        // TODO: Confirm that the axes are not the same and there are 2 selected\r\n\r\n        // Return axes indexes in setHeaders\r\n\r\n    };\r\n\r\n    const setYaxis = (e) => { \r\n       \r\n        // TODO: set  Local state of x\r\n         \r\n        // TODO: Confirm that the axes are not the same and there are 2 selected\r\n\r\n        // Return axes indexes in setHeaders\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>Axes selection goes here!</h3>\r\n             <DropdownButton id=\"x-axis-dropdown\" title=\"x - axis\" onSelect={(e) => setXaxis(e.target.value)} items={tableHeaders}/>\r\n             <DropdownButton id=\"y-axis-dropdown\" title=\"y - axis\" onSelect={(e) => setYaxis(e.target.value)} items={tableHeaders}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AxesSelector\r\n"]},"metadata":{},"sourceType":"module"}