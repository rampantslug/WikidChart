{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\Web Dev\\\\WikidChart\\\\frontend\\\\src\\\\components\\\\AxesSelector.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\nimport Button from './Button';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AxesSelector = (tableHeaders, _ref) => {\n  _s();\n\n  let {\n    onAxesSelected\n  } = _ref;\n  const [headers, setHeaders] = useState([]);\n  /*   const [wikiUrl, setWikiUrl] = useState('');\r\n        const onSubmit = (e) => { \r\n        e.preventDefault();\r\n        if(!wikiUrl)\r\n        {\r\n            alert('Please add a wikipedia URL');\r\n        }\r\n            onGetTable({wikiUrl});\r\n    };\r\n        const onRandomTable = () => { \r\n            // Get some random URL\r\n            // put it in textbox \r\n        setWikiUrl('https://en.wikipedia.org/wiki/Women%27s_high_jump_world_record_progression');\r\n        onGetTable({wikiUrl});\r\n    };\r\n  */\n  // Similar to componentDidMount and componentDidUpdate:\n\n  useEffect(() => {\n    /* for (let i = 0; i <= this.props.headers.maxValue; i++) {             \r\n        items.push(<Dropdown.Item key={i} value={i}>{i}</Dropdown.Item>);   \r\n        //here I will be creating my options dynamically based on\r\n        //what props are currently passed to the parent component\r\n    } */\n    setHeaders(prop.tableHeaders);\n  }), [props.tableHeaders];\n\n  const setXaxis = e => {// TODO: set  Local state of x\n    // TODO: Attempt to show chart\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Axes selection goes here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n      id: \"dropdown-basic-button\",\n      title: \"x - axis\",\n      onSelect: e => setXaxis(e.target.value),\n      items: this.headers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AxesSelector, \"8m2pla4bLaATILtD3tSb+mhM42A=\");\n\n_c = AxesSelector;\nexport default AxesSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"AxesSelector\");","map":{"version":3,"sources":["D:/Dev/Web Dev/WikidChart/frontend/src/components/AxesSelector.js"],"names":["React","DropdownButton","Dropdown","Button","useState","useEffect","AxesSelector","tableHeaders","onAxesSelected","headers","setHeaders","prop","props","setXaxis","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,iBAAzC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,YAAY,GAAG,CAACC,YAAD,WAAsC;AAAA;;AAAA,MAAvB;AAAEC,IAAAA;AAAF,GAAuB;AACvD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOM;;AACJC,EAAAA,SAAS,CAAC,MAAM;AACd;AACJ;AACA;AACA;AACA;AACGK,IAAAA,UAAU,CAACC,IAAI,CAACJ,YAAN,CAAV;AACA,GAPQ,CAAT,EAOI,CAACK,KAAK,CAACL,YAAP,CAPJ;;AAUI,QAAMM,QAAQ,GAAIC,CAAD,IAAO,CAEtB;AAEA;AAEH,GANC;;AASF,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEK,QAAC,cAAD;AAAgB,MAAA,EAAE,EAAC,uBAAnB;AAA2C,MAAA,KAAK,EAAC,UAAjD;AAA4D,MAAA,QAAQ,EAAGA,CAAD,IAAOD,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAArF;AAAuG,MAAA,KAAK,EAAE,KAAKP;AAAnH;AAAA;AAAA;AAAA;AAAA,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CApDD;;GAAMH,Y;;KAAAA,Y;AAsDN,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport Button from './Button';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst AxesSelector = (tableHeaders, { onAxesSelected }) => {\r\n    const [headers, setHeaders] = useState([])\r\n\r\n    /*   const [wikiUrl, setWikiUrl] = useState('');\r\n  \r\n      const onSubmit = (e) => { \r\n          e.preventDefault();\r\n          if(!wikiUrl)\r\n          {\r\n              alert('Please add a wikipedia URL');\r\n          }\r\n  \r\n          onGetTable({wikiUrl});\r\n      };\r\n  \r\n      const onRandomTable = () => { \r\n  \r\n          // Get some random URL\r\n  \r\n          // put it in textbox \r\n          setWikiUrl('https://en.wikipedia.org/wiki/Women%27s_high_jump_world_record_progression');\r\n          onGetTable({wikiUrl});\r\n      };\r\n   */\r\n\r\n      // Similar to componentDidMount and componentDidUpdate:\r\n  useEffect(() => {\r\n    /* for (let i = 0; i <= this.props.headers.maxValue; i++) {             \r\n        items.push(<Dropdown.Item key={i} value={i}>{i}</Dropdown.Item>);   \r\n        //here I will be creating my options dynamically based on\r\n        //what props are currently passed to the parent component\r\n   } */\r\n   setHeaders(prop.tableHeaders);\r\n  }), [props.tableHeaders];\r\n\r\n \r\n      const setXaxis = (e) => { \r\n       \r\n        // TODO: set  Local state of x\r\n         \r\n        // TODO: Attempt to show chart\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>Axes selection goes here!</h3>\r\n             <DropdownButton id=\"dropdown-basic-button\" title=\"x - axis\" onSelect={(e) => setXaxis(e.target.value)} items={this.headers}>\r\n            </DropdownButton> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AxesSelector\r\n"]},"metadata":{},"sourceType":"module"}