{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev\\\\Web Dev\\\\WikidChart\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport PageSelector from './components/PageSelector';\nimport Tasks from './components/Tasks';\nimport { useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    title: {\n      display: true,\n      text: 'Chart.js Bar Chart'\n    }\n  }\n};\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\nconst testData = [1, 2, 4, 5, 2, 5, 3];\nconst data = {\n  labels,\n  datasets: [{\n    label: 'Dataset 1',\n    data: testData,\n    backgroundColor: 'rgba(255, 99, 132, 0.5)'\n  }]\n};\n\nconst App = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    \"id\": 1,\n    \"text\": \"Doctors Appointment\",\n    \"day\": \"Feb 5th at 2:30pm\",\n    \"reminder\": true\n  }, {\n    \"id\": 2,\n    \"text\": \"Meeting at School\",\n    \"day\": \"Feb 6th at 1:30pm\",\n    \"reminder\": true\n  }]); // Delete Task\n\n  const deleteTask = id => {\n    console.log('delete', id);\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // Toggle Reminder\n\n\n  const toggleReminder = id => {\n    console.log('toggle', id);\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Wikid Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PageSelector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: tasks,\n        onDelete: deleteTask,\n        onToggle: toggleReminder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }, this) : 'No Tasks To Show', /*#__PURE__*/_jsxDEV(Bar, {\n        options: options,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Ef0nlnFF+/ZAJi4W+H1mHXBzej8=\");\n\n_c = App;\nconst wikiUrl = 'https://en.wikipedia.org/wiki/Women%27s_high_jump_world_record_progression'; // Add Task\n\nconst addTask = async task => {\n  const res = await fetch('http://localhost:4000', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(wikiUrl)\n  });\n  const data = await res.json();\n  console.log(data); //setTasks([...tasks, data])\n};\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Dev/Web Dev/WikidChart/frontend/src/App.js"],"names":["BrowserRouter","Router","Routes","Route","Header","PageSelector","Tasks","useState","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","register","options","responsive","plugins","legend","position","title","display","text","labels","testData","data","datasets","label","backgroundColor","App","tasks","setTasks","deleteTask","id","console","log","filter","task","toggleReminder","map","reminder","length","wikiUrl","addTask","res","fetch","method","headers","body","JSON","stringify","json"],"mappings":";;;AAAA,SAASA,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SACEC,KAAK,IAAIC,OADX,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,MAPF,QAQO,UARP;AASA,SAASC,GAAT,QAAoB,iBAApB;;AAEAP,OAAO,CAACQ,QAAR,CACEP,aADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,KAJF,EAKEC,OALF,EAMEC,MANF;AASA,OAAO,MAAMG,OAAO,GAAG;AACrBC,EAAAA,UAAU,EAAE,IADS;AAErBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADD;AAIPC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,IAAI,EAAE;AAFD;AAJA;AAFY,CAAhB;AAcP,MAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CAAf;AACA,MAAMC,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAjB;AAEA,MAAMC,IAAI,GAAG;AACXF,EAAAA,MADW;AAEXG,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,WADT;AAEEF,IAAAA,IAAI,EAAED,QAFR;AAGEI,IAAAA,eAAe,EAAE;AAHnB,GADQ;AAFC,CAAb;;AAcA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAAC,CACjC;AACE,UAAM,CADR;AAEE,YAAQ,qBAFV;AAGE,WAAO,mBAHT;AAIE,gBAAY;AAJd,GADiC,EAOjC;AACE,UAAM,CADR;AAEE,YAAQ,mBAFV;AAGE,WAAO,mBAHT;AAIE,gBAAY;AAJd,GAPiC,CAAD,CAAlC,CADgB,CAgBhB;;AACA,QAAM4B,UAAU,GAAIC,EAAD,IAAQ;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,EAAtB;AACAF,IAAAA,QAAQ,CAACD,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAHD,CAjBgB,CAuBlB;;;AACA,QAAMK,cAAc,GAAIL,EAAD,IAAQ;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,EAAtB;AACAF,IAAAA,QAAQ,CACND,KAAK,CAACS,GAAN,CAAWF,IAAD,IACRA,IAAI,CAACJ,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGI,IAAL;AAAWG,MAAAA,QAAQ,EAAE,CAACH,IAAI,CAACG;AAA3B,KAAjB,GAAyDH,IAD3D,CADM,CAAR;AAID,GAND;;AAcE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGP,KAAK,CAACW,MAAN,GAAe,CAAf,gBAAmB,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEX,KAAd;AAAqB,QAAA,QAAQ,EAAEE,UAA/B;AAA2C,QAAA,QAAQ,EAAEM;AAArD;AAAA;AAAA;AAAA;AAAA,cAAnB,GAA4F,kBAH/F,eAKE,QAAC,GAAD;AAAK,QAAA,OAAO,EAAEvB,OAAd;AAAuB,QAAA,IAAI,EAAEU;AAA7B;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAlDD;;GAAMI,G;;KAAAA,G;AAoDN,MAAMa,OAAO,GAAG,4EAAhB,C,CAEA;;AACA,MAAMC,OAAO,GAAG,MAAON,IAAP,IAAgB;AAC9B,QAAMO,GAAG,GAAG,MAAMC,KAAK,CAAC,uBAAD,EAA0B;AAC/CC,IAAAA,MAAM,EAAE,MADuC;AAE/CC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFsC;AAK/CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf;AALyC,GAA1B,CAAvB;AAQA,QAAMjB,IAAI,GAAG,MAAMmB,GAAG,CAACO,IAAJ,EAAnB;AAEAjB,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ,EAX8B,CAc9B;AAED,CAhBD;;AAqBA,eAAeI,GAAf","sourcesContent":["import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport PageSelector from './components/PageSelector';\nimport Tasks from './components/Tasks';\nimport { useState } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top',\n    },\n    title: {\n      display: true,\n      text: 'Chart.js Bar Chart',\n    },\n  },\n};\n\n\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\nconst testData = [1, 2, 4, 5, 2, 5, 3];\n\nconst data = {\n  labels,\n  datasets: [\n    {\n      label: 'Dataset 1',\n      data: testData,\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\n    }\n  ],\n};\n\n\n\n\nconst App = () => {\n  const [tasks, setTasks] = useState([\n    {\n      \"id\": 1,\n      \"text\": \"Doctors Appointment\",\n      \"day\": \"Feb 5th at 2:30pm\",\n      \"reminder\": true\n    },\n    {\n      \"id\": 2,\n      \"text\": \"Meeting at School\",\n      \"day\": \"Feb 6th at 1:30pm\",\n      \"reminder\": true\n    }\n  ]);\n\n  // Delete Task\n  const deleteTask = (id) => {\n    console.log('delete', id);\n    setTasks(tasks.filter((task) => task.id !== id));\n  }\n\n\n// Toggle Reminder\nconst toggleReminder = (id) => {\n  console.log('toggle', id);\n  setTasks(\n    tasks.map((task) =>\n      task.id === id ? { ...task, reminder: !task.reminder } : task\n    ));\n}\n\n\n\n\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header title=\"Wikid Chart\" />\n        <PageSelector />\n        {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> : 'No Tasks To Show'}\n\n        <Bar options={options} data={data} />;\n\n      </header>\n    </div>\n  );\n}\n\nconst wikiUrl = 'https://en.wikipedia.org/wiki/Women%27s_high_jump_world_record_progression';\n\n// Add Task\nconst addTask = async (task) => {\n  const res = await fetch('http://localhost:4000', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(wikiUrl),\n  })\n\n  const data = await res.json();\n\n  console.log(data);\n\n\n  //setTasks([...tasks, data])\n\n}\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}